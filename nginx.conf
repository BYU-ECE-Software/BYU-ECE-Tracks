events { worker_connections 1024; }

http {
  include mime.types;
  types {
    application/javascript js;
    text/css css;
    text/html html;
  }
  default_type application/octet-stream;

  server {
    listen 80;
    server_name ecetracks.byu.edu
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    server_name ecetracks.byu.edu;
    ssl_certificate certs/SSL_cert_bundle.crt;
    ssl_certificate_key certs/SSL_cert_key.key;

    client_max_body_size 100M;

    location / {
      root /usr/share/nginx/html;
      index index.html;
      try_files $uri /index.html;
    }

    location /minio/ {
      rewrite ^/minio/(.*)$ /$1 break;
      proxy_pass http://minio:9000;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $host;
      client_max_body_size 0;
    }

    location /minio-console/ {
      rewrite ^/minio-console/(.*)$ /$1 break;
      proxy_pass http://minio:9001;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $host;
    }

    location /api/ {
      proxy_pass http://api:3000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_request_buffering off;
      proxy_max_temp_file_size 0;
      proxy_read_timeout 120s;
      proxy_send_timeout 120s;

      # CORS Headers
    if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type";
        return 204;
    }

      #Allow CORS
      add_header Access-Control-Allow-Origin $http_origin;
      add_header Access-Control-Allow-Credentials true;
      add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
      add_header Access-Control-Allow-Headers "Authorization, Content-Type";

      # Handle Preflight Requests
      if ($request_method = OPTIONS) {
        return 204;
      }
      
    }
  }
}
